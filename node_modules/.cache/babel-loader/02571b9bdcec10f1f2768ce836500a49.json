{"ast":null,"code":"var _jsxFileName = \"/Users/shyam/Documents/SIT/OIP/Test/GithubPagesTest/react-tailwindcss-portfolio/src/context/ProjectsContext.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, createContext } from 'react';\nimport { projectsData } from '../data/projects'; // Create projects context\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProjectsContext = /*#__PURE__*/createContext(); // Create the projects context provider\n\nexport const ProjectsProvider = props => {\n  _s();\n\n  const [projects, setProjects] = useState(projectsData);\n  const [searchProject, setSearchProject] = useState('');\n  const [selectProject, setSelectProject] = useState(''); // Search projects by project title\n\n  const searchProjectsByTitle = projects.filter(item => {\n    const result = item.title.toLowerCase().includes(searchProject.toLowerCase()) ? item : searchProject === '' ? item : '';\n    return result;\n  }); // Select projects by project category\n\n  const selectProjectsByCategory = projects.filter(item => {\n    let category = item.category.charAt(0).toUpperCase() + item.category.slice(1);\n    return category.includes(selectProject);\n  });\n  return /*#__PURE__*/_jsxDEV(ProjectsContext.Provider, {\n    value: {\n      projects,\n      setProjects,\n      searchProject,\n      setSearchProject,\n      searchProjectsByTitle,\n      selectProject,\n      setSelectProject,\n      selectProjectsByCategory\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ProjectsProvider, \"/5wGeOX5nKDtPIUrw+bniUk0SRA=\");\n\n_c = ProjectsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectsProvider\");","map":{"version":3,"sources":["/Users/shyam/Documents/SIT/OIP/Test/GithubPagesTest/react-tailwindcss-portfolio/src/context/ProjectsContext.jsx"],"names":["useState","createContext","projectsData","ProjectsContext","ProjectsProvider","props","projects","setProjects","searchProject","setSearchProject","selectProject","setSelectProject","searchProjectsByTitle","filter","item","result","title","toLowerCase","includes","selectProjectsByCategory","category","charAt","toUpperCase","slice","children"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,aAAnB,QAAwC,OAAxC;AACA,SAASC,YAAT,QAA6B,kBAA7B,C,CAEA;;;AACA,OAAO,MAAMC,eAAe,gBAAGF,aAAa,EAArC,C,CAEP;;AACA,OAAO,MAAMG,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AAC1C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAACE,YAAD,CAAxC;AACA,QAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD,CAH0C,CAK1C;;AACA,QAAMY,qBAAqB,GAAGN,QAAQ,CAACO,MAAT,CAAiBC,IAAD,IAAU;AACvD,UAAMC,MAAM,GAAGD,IAAI,CAACE,KAAL,CACbC,WADa,GAEbC,QAFa,CAEJV,aAAa,CAACS,WAAd,EAFI,IAGZH,IAHY,GAIZN,aAAa,KAAK,EAAlB,GACAM,IADA,GAEA,EANH;AAOA,WAAOC,MAAP;AACA,GAT6B,CAA9B,CAN0C,CAiB1C;;AACA,QAAMI,wBAAwB,GAAGb,QAAQ,CAACO,MAAT,CAAiBC,IAAD,IAAU;AAC1D,QAAIM,QAAQ,GACXN,IAAI,CAACM,QAAL,CAAcC,MAAd,CAAqB,CAArB,EAAwBC,WAAxB,KAAwCR,IAAI,CAACM,QAAL,CAAcG,KAAd,CAAoB,CAApB,CADzC;AAEA,WAAOH,QAAQ,CAACF,QAAT,CAAkBR,aAAlB,CAAP;AACA,GAJgC,CAAjC;AAMA,sBACC,QAAC,eAAD,CAAiB,QAAjB;AACC,IAAA,KAAK,EAAE;AACNJ,MAAAA,QADM;AAENC,MAAAA,WAFM;AAGNC,MAAAA,aAHM;AAINC,MAAAA,gBAJM;AAKNG,MAAAA,qBALM;AAMNF,MAAAA,aANM;AAONC,MAAAA,gBAPM;AAQNQ,MAAAA;AARM,KADR;AAAA,cAYEd,KAAK,CAACmB;AAZR;AAAA;AAAA;AAAA;AAAA,UADD;AAgBA,CAxCM;;GAAMpB,gB;;KAAAA,gB","sourcesContent":["import { useState, createContext } from 'react';\nimport { projectsData } from '../data/projects';\n\n// Create projects context\nexport const ProjectsContext = createContext();\n\n// Create the projects context provider\nexport const ProjectsProvider = (props) => {\n\tconst [projects, setProjects] = useState(projectsData);\n\tconst [searchProject, setSearchProject] = useState('');\n\tconst [selectProject, setSelectProject] = useState('');\n\n\t// Search projects by project title\n\tconst searchProjectsByTitle = projects.filter((item) => {\n\t\tconst result = item.title\n\t\t\t.toLowerCase()\n\t\t\t.includes(searchProject.toLowerCase())\n\t\t\t? item\n\t\t\t: searchProject === ''\n\t\t\t? item\n\t\t\t: '';\n\t\treturn result;\n\t});\n\n\t// Select projects by project category\n\tconst selectProjectsByCategory = projects.filter((item) => {\n\t\tlet category =\n\t\t\titem.category.charAt(0).toUpperCase() + item.category.slice(1);\n\t\treturn category.includes(selectProject);\n\t});\n\n\treturn (\n\t\t<ProjectsContext.Provider\n\t\t\tvalue={{\n\t\t\t\tprojects,\n\t\t\t\tsetProjects,\n\t\t\t\tsearchProject,\n\t\t\t\tsetSearchProject,\n\t\t\t\tsearchProjectsByTitle,\n\t\t\t\tselectProject,\n\t\t\t\tsetSelectProject,\n\t\t\t\tselectProjectsByCategory,\n\t\t\t}}\n\t\t>\n\t\t\t{props.children}\n\t\t</ProjectsContext.Provider>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}