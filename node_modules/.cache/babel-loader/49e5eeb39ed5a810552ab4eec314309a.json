{"ast":null,"code":"import _slicedToArray from\"/Users/shyam/Documents/SIT/OIP/Test/GithubPagesTest/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,createContext}from'react';import{projectsData}from'../data/projects';// Create projects context\nimport{jsx as _jsx}from\"react/jsx-runtime\";export var ProjectsContext=/*#__PURE__*/createContext();// Create the projects context provider\nexport var ProjectsProvider=function ProjectsProvider(props){var _useState=useState(projectsData),_useState2=_slicedToArray(_useState,2),projects=_useState2[0],setProjects=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),searchProject=_useState4[0],setSearchProject=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),selectProject=_useState6[0],setSelectProject=_useState6[1];// Search projects by project title\nvar searchProjectsByTitle=projects.filter(function(item){var result=item.title.toLowerCase().includes(searchProject.toLowerCase())?item:searchProject===''?item:'';return result;});// Select projects by project category\nvar selectProjectsByCategory=projects.filter(function(item){var category=item.category.charAt(0).toUpperCase()+item.category.slice(1);return category.includes(selectProject);});return/*#__PURE__*/_jsx(ProjectsContext.Provider,{value:{projects:projects,setProjects:setProjects,searchProject:searchProject,setSearchProject:setSearchProject,searchProjectsByTitle:searchProjectsByTitle,selectProject:selectProject,setSelectProject:setSelectProject,selectProjectsByCategory:selectProjectsByCategory},children:props.children});};","map":{"version":3,"sources":["/Users/shyam/Documents/SIT/OIP/Test/GithubPagesTest/src/context/ProjectsContext.jsx"],"names":["useState","createContext","projectsData","ProjectsContext","ProjectsProvider","props","projects","setProjects","searchProject","setSearchProject","selectProject","setSelectProject","searchProjectsByTitle","filter","item","result","title","toLowerCase","includes","selectProjectsByCategory","category","charAt","toUpperCase","slice","children"],"mappings":"0KAAA,OAASA,QAAT,CAAmBC,aAAnB,KAAwC,OAAxC,CACA,OAASC,YAAT,KAA6B,kBAA7B,CAEA;2CACA,MAAO,IAAMC,CAAAA,eAAe,cAAGF,aAAa,EAArC,CAEP;AACA,MAAO,IAAMG,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAW,CAC1C,cAAgCL,QAAQ,CAACE,YAAD,CAAxC,wCAAOI,QAAP,eAAiBC,WAAjB,eACA,eAA0CP,QAAQ,CAAC,EAAD,CAAlD,yCAAOQ,aAAP,eAAsBC,gBAAtB,eACA,eAA0CT,QAAQ,CAAC,EAAD,CAAlD,yCAAOU,aAAP,eAAsBC,gBAAtB,eAEA;AACA,GAAMC,CAAAA,qBAAqB,CAAGN,QAAQ,CAACO,MAAT,CAAgB,SAACC,IAAD,CAAU,CACvD,GAAMC,CAAAA,MAAM,CAAGD,IAAI,CAACE,KAAL,CACbC,WADa,GAEbC,QAFa,CAEJV,aAAa,CAACS,WAAd,EAFI,EAGZH,IAHY,CAIZN,aAAa,GAAK,EAAlB,CACAM,IADA,CAEA,EANH,CAOA,MAAOC,CAAAA,MAAP,CACA,CAT6B,CAA9B,CAWA;AACA,GAAMI,CAAAA,wBAAwB,CAAGb,QAAQ,CAACO,MAAT,CAAgB,SAACC,IAAD,CAAU,CAC1D,GAAIM,CAAAA,QAAQ,CACXN,IAAI,CAACM,QAAL,CAAcC,MAAd,CAAqB,CAArB,EAAwBC,WAAxB,GAAwCR,IAAI,CAACM,QAAL,CAAcG,KAAd,CAAoB,CAApB,CADzC,CAEA,MAAOH,CAAAA,QAAQ,CAACF,QAAT,CAAkBR,aAAlB,CAAP,CACA,CAJgC,CAAjC,CAMA,mBACC,KAAC,eAAD,CAAiB,QAAjB,EACC,KAAK,CAAE,CACNJ,QAAQ,CAARA,QADM,CAENC,WAAW,CAAXA,WAFM,CAGNC,aAAa,CAAbA,aAHM,CAINC,gBAAgB,CAAhBA,gBAJM,CAKNG,qBAAqB,CAArBA,qBALM,CAMNF,aAAa,CAAbA,aANM,CAONC,gBAAgB,CAAhBA,gBAPM,CAQNQ,wBAAwB,CAAxBA,wBARM,CADR,UAYEd,KAAK,CAACmB,QAZR,EADD,CAgBA,CAxCM","sourcesContent":["import { useState, createContext } from 'react';\nimport { projectsData } from '../data/projects';\n\n// Create projects context\nexport const ProjectsContext = createContext();\n\n// Create the projects context provider\nexport const ProjectsProvider = (props) => {\n\tconst [projects, setProjects] = useState(projectsData);\n\tconst [searchProject, setSearchProject] = useState('');\n\tconst [selectProject, setSelectProject] = useState('');\n\n\t// Search projects by project title\n\tconst searchProjectsByTitle = projects.filter((item) => {\n\t\tconst result = item.title\n\t\t\t.toLowerCase()\n\t\t\t.includes(searchProject.toLowerCase())\n\t\t\t? item\n\t\t\t: searchProject === ''\n\t\t\t? item\n\t\t\t: '';\n\t\treturn result;\n\t});\n\n\t// Select projects by project category\n\tconst selectProjectsByCategory = projects.filter((item) => {\n\t\tlet category =\n\t\t\titem.category.charAt(0).toUpperCase() + item.category.slice(1);\n\t\treturn category.includes(selectProject);\n\t});\n\n\treturn (\n\t\t<ProjectsContext.Provider\n\t\t\tvalue={{\n\t\t\t\tprojects,\n\t\t\t\tsetProjects,\n\t\t\t\tsearchProject,\n\t\t\t\tsetSearchProject,\n\t\t\t\tsearchProjectsByTitle,\n\t\t\t\tselectProject,\n\t\t\t\tsetSelectProject,\n\t\t\t\tselectProjectsByCategory,\n\t\t\t}}\n\t\t>\n\t\t\t{props.children}\n\t\t</ProjectsContext.Provider>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}